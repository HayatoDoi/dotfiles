# =====================================================
# This program is for the Japanese.
# Therefore, comments are written in Japanese.
# All will be understood by reading the source code.
# =====================================================
# File name          : main_zshrc
# Author             : Hayato Doi
# Last Update        : 2020/1/29
# Since              : 2015/7/14
# Outline            : zshの設定ファイル
# Copyright (c) 2015-2020, Hayato Doi

# sshから起動したとき、tmuxを起動する
if [ -n "$SSH_CONNECTION" ] && [[ ! -n $TMUX ]]; then
	if tmux ls; then
		tmux -u a
	else
		tmux -u
	fi
fi

# OSごとの設定を詠みこむ
ZSHRC_DIR="${HOME}/.dotfiles/zshrc"

case ${OSTYPE} in
	darwin*) #mac
		source $ZSHRC_DIR/macos_zshrc.zsh
		;;
	freebsd*) #bsd
		source $ZSHRC_DIR/bsd_zshrc.zsh
		;;
	linux*)  #linux
		source $ZSHRC_DIR/linux_zshrc.zsh
		;;
esac

# 細かい環境の設定ファイルを読み込む
for f in `ls -a $ZSHRC_DIR/env/*.zsh \
		$ZSHRC_DIR/ignore_env/*.zsh \
		$ZSHRC_DIR/job_zshrc/*.zsh \
		$ZSHRC_DIR/buildin_cmd/*.zsh`;do
	source $f
done

# shell用組み込みコマンドの読み込み
source ~/.dotfiles/zshrc/buildin_cmd/*
# local 実行ファイルpathの読み込み
source ~/.bin/include_path.zsh

# カラー設定を読み込む
source $ZSHRC_DIR/color.zsh

# 独自コマンドにpathを通す
export PATH=$PATH:$ZSHRC_DIR/cmd

# 環境変数LANGの設定
export LANG=ja_JP.UTF-8

# 補完機能設定
autoload -U compinit
compinit

# VCSの情報を取得するzshの便利関数 vcs_infoを使う
autoload -Uz vcs_info

# viinsモードでバックスペースを使う
bindkey -v '^?' backward-delete-char

# 履歴の設定
HISTFILE=~/.zsh_history
HISTSIZE=10000
SAVEHIST=10000
setopt hist_ignore_dups
setopt share_history

# viキーバインド設定
#bindkey -v

# 補完候補のカーソル選択を有効にする設定
zstyle ':completion:*:default' menu select=1

# コマンドエラーの修正
setopt nonomatch

#補完を大文字小文字を区別しない
zstyle ':completion:*' matcher-list 'm:{a-z}={A-Z}'

# エイリアス
alias grep='grep --colour=auto'

alias ls='exa'
alias lst='exa -ltr'
alias l='exa -ltr'
alias la='exa -la'
alias ll='exa -l'

alias vim='nvim'
alias vi='nvim'
alias ns='npm start'

#backupの作成
alias rm='mv -b -t /var/tmp/trash'
alias cp='cp -b'
alias mv='mv -b'

# shell用ゴミ箱を確認
if [ ! -e /var/tmp/trash ]; then
	mkdir /var/tmp/trash
fi

